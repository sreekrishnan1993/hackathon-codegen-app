{"html":"```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Frozen Cookbook by Ziploc</title>\n    <style>\n        body {\n            margin: 0;\n            font-family: Arial, sans-serif;\n        }\n        .container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n        }\n        .left {\n            background-color: #00216a;\n            color: white;\n            padding: 50px;\n            width: 50%;\n            box-sizing: border-box;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n        .left h1 {\n            margin: 0 0 20px 0;\n            font-size: 36px;\n            font-weight: bold;\n        }\n        .left p {\n            margin: 20px 0;\n            font-size: 16px;\n            line-height: 1.5;\n        }\n        .buttons {\n            margin-top: 30px;\n        }\n        .button {\n            background-color: white;\n            color: #00216a;\n            border: 2px solid white;\n            padding: 10px 20px;\n            margin-right: 10px;\n            border-radius: 50px;\n            text-decoration: none;\n            font-weight: bold;\n            font-size: 14px;\n            transition: all 0.3s ease;\n        }\n        .button:hover {\n            background-color: #f1f1f1;\n        }\n        .right {\n            width: 50%;\n            height: 100%;\n            background-image: url('https://i.imgur.com/hxXOw4d.png');\n            background-size: cover;\n            background-position: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"left\">\n            <h1>World’s First Frozen Cookbook by Ziploc®</h1>\n            <p>Ziploc® is partnering with Molly Yeh, cookbook author, mom, renowned chef and fellow food lover</p>\n            <p>Helping families save money and make the most of these bonus bags while preserving the food they love.</p>\n            <div class=\"buttons\">\n                <a href=\"#\" class=\"button\">Shop all products</a>\n                <a href=\"#\" class=\"button\">Explore cookbook</a>\n            </div>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n</body>\n</html>\n```\n\nThis HTML structure is designed to match the visual appearance of the provided design. The image URL specified in the CSS background expects the correct and accessible URL, so ensure the path is valid in your context.","sitecoreFields":"Here are the fields defined in the HTML:\n\n```json\n[\n    {\n        \"fieldName\": \"pageTitle\",\n        \"fieldType\": \"Single-Line Text\",\n        \"description\": \"This field should contain the title of the page, which will be shown in the browser tab.\"\n    },\n    {\n        \"fieldName\": \"bodyFont\",\n        \"fieldType\": \"Drop-Link\",\n        \"description\": \"This field should contain the font used in the body of the page. This should be linked to an item in a 'Font' folder that contains Arial and sans-serif options.\"\n    },\n    {\n        \"fieldName\": \"mainHeader\",\n        \"fieldType\": \"Single-Line Text\",\n        \"description\": \"This is the main header in the 'left' div.\"\n    },\n    {\n        \"fieldName\": \"description1\",\n        \"fieldType\": \"Rich Text\",\n        \"description\": \"This is the first paragraph in the 'left' div.\"\n    },\n    {\n        \"fieldName\": \"description2\",\n        \"fieldType\": \"Rich Text\",\n        \"description\": \"This is the second paragraph in the 'left' div.\"\n    },\n    {\n        \"fieldName\": \"button1Text\",\n        \"fieldType\": \"Single-Line Text\",\n        \"description\": \"This is the text in the first button.\"\n    },\n    {\n        \"fieldName\": \"button2Text\",\n        \"fieldType\": \"Single-Line Text\",\n        \"description\": \"This is the text in the second button.\"\n    },\n    {\n        \"fieldName\": \"button1Link\",\n        \"fieldType\": \"General Link\",\n        \"description\": \"This is the link for the first button.\"\n    },\n    {\n        \"fieldName\": \"button2Link\",\n        \"fieldType\": \"General Link\",\n        \"description\": \"This is the link for the second button.\"\n    },\n    {\n        \"fieldName\": \"backgroundImage\",\n        \"fieldType\": \"Image\",\n        \"description\": \"This is the background image used in the 'right' div.\"\n    }\n]\n```\nThis structure represents field definitions for the Sitecore item containing the content of this HTML. Field type is determined by the type of content the field is expected to host. Descriptions give more clarity on what content should be hosted in each field.","component":"Here is a NextJS component created based on the provided HTML and Sitecore fields association:\n\n```jsx\nimport { useSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\n\nconst Cookbook = () => {\n  const { sitecoreContext: { route: { fields } } } = useSitecoreContext();\n\n  const {\n    pageTitle,\n    bodyFont,\n    mainHeader,\n    description1,\n    description2,\n    button1Text,\n    button2Text,\n    button1Link,\n    button2Link,\n    backgroundImage\n  } = fields;\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{pageTitle.value}</title>\n        {/* Include the rest of CSS here */}\n      </head>\n      <body style={{fontFamily: bodyFont.value}}>\n        <div className=\"container\">\n          <div className=\"left\">\n            <h1>{mainHeader.value}</h1>\n            <p dangerouslySetInnerHTML={{__html: description1.value}} />\n            <p dangerouslySetInnerHTML={{__html: description2.value}} />\n            <div className=\"buttons\">\n              <a href={button1Link?.value?.href || '#'} className=\"button\">{button1Text.value}</a>\n              <a href={button2Link?.value?.href || '#'} className=\"button\">{button2Text.value}</a>\n            </div>\n          </div>\n          <div className=\"right\" style={{backgroundImage: `url('${backgroundImage?.value?.src || ''}')`}}></div>\n        </div>\n      </body>\n    </html>\n  );\n};\n\nexport default Cookbook;\n```\n\nThis component uses the 'sitecore-jss-nextjs' library to fetch field data from Sitecore. Use the 'useSitecoreContext' hook from '@sitecore-jss/sitecore-jss-nextjs' to get the Sitecore route and access the field data.\n\nNote: Use 'dangerouslySetInnerHTML' for rich text fields, making sure HTML content is rendered correctly. \n\nPlease replace `{/* Include the rest of CSS here */}` with the CSS in your head. Keep in mind Next.js's CSS-in-JS preference, as global styles should generally be defined in a `_app.js` file or imported as a CSS/SCSS file. \n\nThe `backgroundImage` style property sets the image URL directly in the inline style. If the image URL is not available, it will set to an empty string. \n\nThis component doesn't handle required font styles (fonts are usually managed at the _app.js level or a global CSS import, not on a component level). If you really need font management inside the component, you could use a custom hook to link font items and apply it in your component.","timestamp":1743822791295}